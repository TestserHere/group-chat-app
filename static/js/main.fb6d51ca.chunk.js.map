{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","ChatApp","roomCode","setRoomCode","useState","customRoomCode","setCustomRoomCode","message","setMessage","messages","setMessages","rooms","setRooms","username","setUsername","localStorage","getItem","usernameSet","setUsernameSet","useEffect","async","snapshot","getDocs","collection","docs","map","doc","id","fetchRooms","q","query","orderBy","unsubscribe","onSnapshot","data","sendMessage","trim","setDoc","Date","getTime","toString","text","timestamp","user","React","createElement","className","style","maxWidth","onClick","toggleFullscreen","document","fullscreenElement","exitFullscreen","documentElement","requestFullscreen","FaExpand","height","backgroundColor","borderRadius","msg","key","marginBottom","position","onMouseEnter","e","currentTarget","querySelector","display","onMouseLeave","deleteDoc","deleteMessage","FaTrash","padding","placeholder","value","onChange","target","onKeyDown","event","room","joinRoom","setUser","setItem","setTimeout","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","App"],"mappings":"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","file":"static/js/main.fb6d51ca.chunk.js","sourcesContent":["import React from 'react';\nimport { useState, useEffect } from \"react\";\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore, collection, setDoc, onSnapshot, query, orderBy, getDocs, doc, deleteDoc } from \"firebase/firestore\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { FaTrash, FaUndo, FaExpand } from \"react-icons/fa\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAThnPos7CBAUo9KU00soMwOgx0vFXVmL8\",\n  authDomain: \"groupchatapp-12918.firebaseapp.com\",\n  projectId: \"groupchatapp-12918\",\n  storageBucket: \"groupchatapp-12918.firebasestorage.app\",\n  messagingSenderId: \"312169425350\",\n  appId: \"1:312169425350:web:26dca269b31fbb407baac7\",\n  measurementId: \"G-7XDHBHSCZD\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst db = getFirestore(app);\n\nexport default function ChatApp() {\n  const [roomCode, setRoomCode] = useState(\"\");\n  const [customRoomCode, setCustomRoomCode] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [rooms, setRooms] = useState([]);\n  const [username, setUsername] = useState(localStorage.getItem(\"username\") || \"\");\n  const [usernameSet, setUsernameSet] = useState(!!localStorage.getItem(\"username\"));\n\n  useEffect(() => {\n    const fetchRooms = async () => {\n      const snapshot = await getDocs(collection(db, \"chatrooms\"));\n      setRooms(snapshot.docs.map(doc => doc.id));\n    };\n    fetchRooms();\n  }, []);\n\n  useEffect(() => {\n    if (roomCode) {\n      const q = query(collection(db, roomCode), orderBy(\"timestamp\", \"asc\"));\n      const unsubscribe = onSnapshot(q, (snapshot) => {\n        setMessages(snapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\n      });\n      return () => unsubscribe();\n    }\n  }, [roomCode]);\n\n  const createRoom = async () => {\n    if (!customRoomCode.trim()) return;\n    await setDoc(doc(db, \"chatrooms\", customRoomCode), { id: customRoomCode });\n    setRoomCode(customRoomCode);\n  };\n\n  const joinRoom = (room) => {\n    setRoomCode(room);\n  };\n\n  const sendMessage = async () => {\n    if (roomCode && message.trim()) {\n      await setDoc(doc(db, roomCode, new Date().getTime().toString()), { text: message, timestamp: new Date().getTime(), user: username });\n      setMessage(\"\");\n    }\n  };\n\n  const handleKeyPress = (event) => {\n    if (event.key === \"Enter\") {\n      sendMessage();\n    }\n  };\n\n  const setUser = () => {\n    if (username.trim()) {\n      localStorage.setItem(\"username\", username);\n      setTimeout(() => setUsernameSet(true), 100);\n    }\n  };\n\n  const toggleFullscreen = () => {\n    if (!document.fullscreenElement) {\n      document.documentElement.requestFullscreen();\n    } else {\n      document.exitFullscreen();\n    }\n  };\n\n  const deleteMessage = async (id, user) => {\n    if (user === username) {\n      await deleteDoc(doc(db, roomCode, id));\n    }\n  };\n\n  return (\n    <div className=\"container mt-4 d-flex flex-column align-items-center\" style={{ maxWidth: \"400px\" }}>\n      <h1 className=\"text-center mb-4\">Message App</h1>\n      <button className=\"btn btn-secondary mb-2\" onClick={toggleFullscreen}><FaExpand /></button>\n      {!usernameSet ? (\n        <div className=\"card p-4 shadow-sm w-100\">\n          <input \n            className=\"form-control mb-2\" \n            placeholder=\"Enter a username\" \n            value={username} \n            onChange={(e) => setUsername(e.target.value)}\n          />\n          <button onClick={setUser} className=\"btn btn-primary w-100\">Set Username</button>\n        </div>\n      ) : !roomCode ? (\n        <div className=\"card p-4 shadow-sm w-100\">\n          <input \n            className=\"form-control mb-2\" \n            placeholder=\"Enter Custom Room Code\" \n            value={customRoomCode} \n            onChange={(e) => setCustomRoomCode(e.target.value)}\n          />\n          <button onClick={createRoom} className=\"btn btn-primary w-100\">Create Chat Room</button>\n          <h2 className=\"mt-4\">Join an Existing Room</h2>\n          <ul className=\"list-group\">\n            {rooms.map((room) => (\n              <li key={room} className=\"list-group-item d-flex justify-content-between\">\n                <span>{room}</span>\n                <button onClick={() => joinRoom(room)} className=\"btn btn-secondary\">Join</button>\n              </li>\n            ))}\n          </ul>\n        </div>\n      ) : (\n        <div className=\"card p-4 shadow-sm w-100 d-flex flex-column\" style={{ height: \"500px\" }}>\n          <p className=\"text-center\">Room Code: <span className=\"badge bg-secondary\">{roomCode}</span></p>\n          <div className=\"messages-box flex-grow-1 p-3 mb-3 overflow-auto\" style={{ backgroundColor: \"#f1f1f1\", borderRadius: \"10px\" }}>\n            {messages.map((msg) => (\n              <div \n                key={msg.id} \n                className={`d-flex align-items-center ${msg.user === username ? 'justify-content-end' : 'justify-content-start'}`} \n                style={{ marginBottom: \"5px\", position: \"relative\" }}\n                onMouseEnter={(e) => e.currentTarget.querySelector(\".msg-options\").style.display = \"block\"}\n                onMouseLeave={(e) => e.currentTarget.querySelector(\".msg-options\").style.display = \"none\"}\n              >\n                {msg.user === username && (\n                  <div className=\"msg-options me-2\" style={{ display: \"none\" }}>\n                    <button className=\"btn btn-sm btn-danger me-1\" onClick={() => deleteMessage(msg.id, msg.user)}><FaTrash /></button>\n                  </div>\n                )}\n                <div className={`p-3 text-white ${msg.user === username ? 'bg-primary' : 'bg-secondary'}`} \n                  style={{ maxWidth: \"75%\", borderRadius: \"20px\", padding: \"10px 15px\" }}>\n                  {msg.user}: {msg.text}\n                </div>\n              </div>\n            ))}\n          </div>\n          <div className=\"input-group\">\n            <input \n              className=\"form-control rounded-pill\" \n              placeholder=\"Message...\" \n              value={message} \n              onChange={(e) => setMessage(e.target.value)}\n              onKeyDown={handleKeyPress}\n            />\n            <button onClick={sendMessage} className=\"btn btn-success rounded-pill\">Send</button>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}